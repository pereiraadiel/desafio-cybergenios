version: "3"
services:
  postgres:
    container_name: cybergenios_db
    image: postgres
    env_file: 
      - .env.dev
    ports:
      - 5432:5432
    volumes: 
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
     - cybergenios-net
    healthcheck:
      test: "pg_isready -U postgres -d cybergenios"
      interval: 5s
      timeout: 3s
      retries: 3
  app:
    container_name: cybergenios
    build:
      context: .
      dockerfile: .docker/Dockerfile
    env_file:
      - .env.dev
    entrypoint: sh -c "chmod +x .docker/startup.sh && .docker/startup.sh"
    command: npm run start:dev
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - nodemodules:/app/node_modules
    links:
      - postgres
    depends_on:
      postgres: 
        condition: service_healthy
    restart: always
    networks:
     - cybergenios-net
volumes:
  nodemodules: {}
  pgdata: {}
networks:
  cybergenios-net:
    driver: bridge